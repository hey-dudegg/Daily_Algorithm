#######################################
## 백준 1074 Z
# 한수는 크기가 2^N × 2^N인 2차원 배열을 Z모양으로 탐색하려고 한다.
# 예를 들어, 2×2배열을 왼쪽 위칸, 오른쪽 위칸, 왼쪽 아래칸, 오른쪽 아래칸 순서대로 방문하면 Z모양이다.
# N이 주어졌을 때, r행 c열을 몇 번째로 방문하는지 출력하는 프로그램을 작성하시오.

## 풀이
# 처음에는 Z 방향의 탐색 방법까지 구현해야 한다고 생각했습니다. 그러나 문제를 읽어보니 몇 번째로 방문하는지만 
# 출력하면 되기 때문에 "어떻게 몇 번째로 방문하는지를 알 수 있을지"을 구현하는 것으로 방향을 정했습니다.
# 규칙성 파악하려 했을 때, 알듯말듯하게 시간이 오래 걸려서 솔루션을 통해 아이디어를 얻었습니다.
#######################################
# import sys

# n, x, y = input().split()

# for i in range(n - 1, 0) :
#     idx = (2 ** (i * 2))
# idx += ((((x + 1) * (y + 1)) - 1) % 4)

## 풀이
N, r, c = map(int, input().split())

ans = 0

while N != 0:
    N -= 1

    # 제2 사분면
    if r < 2 ** N and c < 2 ** N:
        ans += (2 ** N) * (2 ** N) * 0

    # 제1 사분면
    elif r < 2 ** N and c>= 2 ** N:
        ans += (2 ** N) * (2 ** N) * 1
        c -= (2 ** N)

    # 제3 사분면
    elif r >= 2 ** N and c < 2 ** N:
        ans += (2 ** N) * (2 ** N) * 2
        r -= (2 ** N)

    # 제4 사분면
    else:
        ans += (2 ** N) * (2 ** N) * 3
        r -= (2 ** N)
        c -= (2 ** N)

print(ans)